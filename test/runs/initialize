:

function test_initialize {
    ws initialize
    test $? -eq 0 || return 1

    test -d "$WS_DIR" || return 1
    test -d "$WS_DIR/.ws" || return 1
    test -s "$WS_DIR/.ws/config.sh" || return 1
    test -s "$WS_DIR/.ws/hook.sh" -a -x "$WS_DIR/.ws/hook.sh" || return 1
    test -s "$WS_DIR/.ws/hook.sh" -a -x "$WS_DIR/.ws/skel.sh" || return 1
    test -d "$WS_DIR/default" || return 1
    test -d "$WS_DIR/default/.ws" || return 1
    test -s "$WS_DIR/.ws/config.sh" || return 1
    test -s "$WS_DIR/.ws/hook.sh" -a -x "$WS_DIR/default/.ws/hook.sh" || return 1
    test "$(md5sum < $WS_DIR/.ws/hook.sh)" = "$md5_hook_sh  -" || return 1
    test "$(md5sum < $WS_DIR/.ws/config.sh)" = "$md5_config_sh  -" || return 1
    test "$(readlink $HOME/workspace)" = "$WS_DIR/default" || return 1
    test "$(_ws_getdir default)" = "$WS_DIR/default" || return 1

    test "$(ws list)" = "default@" || return 1
    test "$(ws stack)" = "($cdir)" || return 1

    # test plugins extracted properly
    test -d $WS_DIR/.ws/plugins || return 1
    test -f $WS_DIR/.ws/plugins/cdpath -a -f $WS_DIR/.ws/plugins/github || return 1
}

function test_ws_getdir {
    result=$(_ws_getdir default)
    test $? -eq 0 -a "$result" = "$WS_DIR/default" || return 1
    result=$(_ws_getdir foobar)
    test $? -eq 1 -a "$result" = "$WS_DIR/foobar" || return 1
}

function test_ws_link {
    result=$(_ws_link get)
    test $? -eq 0 -a "$result" = "$WS_DIR/default" || return 1
    result=$(_ws_link set $WS_DIR/default)
    test $? -eq 0 -a "$result" = "" -a $(readlink $HOME/workspace) = "$WS_DIR/default" || return 1
}

run_test initialize        test_initialize
run_test ws_getdir         test_ws_getdir
run_test ws_link           test_ws_link
